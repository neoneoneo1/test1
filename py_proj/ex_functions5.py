# -*- coding: utf-8 -*-
__author__ = 'admin'
#Функции
#Прототип
def f1(par1,par2=10):
    print par1
    par1=par1-1
    return par1
p=101
f1(p)
print p
t=f1(p)
print t

#Переименование функций
fun2=f1
f1(1)
fun2(1)


#Переменная r создается 1 раз и является статической Список можно вывести print-ом
print "Переменная r создается 1 раз и является статической Список можно вывести print-ом"
def f(a, r = []):
    r.append(a)
    return r
print f(1)
print f(2)
print f(3)

#Функция с произвольным набором параметров
print "Функция с произвольным набором параметров"
def tmpf(one,two,*other):
    print one+two
    print other #other будет в виде кортежа (неизменяемый список)
    print other[0]
tmpf(1,2,3,4)

#Если в функцию передаются простые именованные параметры,
#список изменяемых параметров и словарь то они
#должны передаваться в функцию в такой порядке
#словарь ключ=значение
#имя Ключ не должен совпадать с именованным простым параметром по имени
print "Если в функцию передаются простые именованные параметры,\n\
список изменяемых параметров и словарь то они\n\
должны передаваться в функцию в такой порядке словарь ключ=значение\n\
имя Ключ не должен совпадать с именованным простым параметром по имени"
def tmpf1(one,two,*varargs,**slovar):
    print one+two
    print varargs
    print slovar
tmpf1(1,2,3,4,one1=11,two1=22,three1=33)

#Функция фильтра не изменяет значений
print "Функция фильтра не изменяет значений"
def myfil(x):
    if x%2==0 :
        return 1
    else:
        return 0
aa=filter(myfil,range(0,100))
print aa

#Функция фильтра изменяет значения
print "Функция фильтра изменяет значения"
def myfil1(x):
    if x%2==0 :
        return x*x
    else:
        return x*x*x
aa=map(myfil1,range(0,10))
print aa

#reduce возвращает значение, полученное путем последовательноко применения
#функции function сначала к первым двум элементам последовательности sequence
#а затем результата этой функции к следующему элементу
#reduce(functoin,sequence,initial)
#Пример сумма всех элементов последовательности
def sumall(x,y) :
    return x+y
val=reduce(sumall,xrange(1,11))
print 'sumall=',val

"""

def fun(*x):
    x[0][0]=1
    print x
x=[10]
#print x[0][0]
fun(x)
print x
"""

#Функция dir()
#Возвращает сортированный список строк
#Список функций из модуля
print dir(init2)
#Возвращает список пространств имен в текущей области видимости
print dir()